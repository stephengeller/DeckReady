#!/usr/bin/env bash
set -euo pipefail

# -----------------------
# Resolve repo paths (no npm link needed)
# -----------------------
SCRIPT_DIR="$(cd -- "$(dirname "${BASH_SOURCE[0]}")" >/dev/null 2>&1 && pwd)"
# Use our ts-node shims by default so the CLI runs TypeScript entrypoints directly
RUN_LUCKY_JS="${RUN_LUCKY_JS:-"$SCRIPT_DIR/run-lucky"}"
SPOTIFY_LIST_JS="${SPOTIFY_LIST_JS:-"$SCRIPT_DIR/spotify-list"}"

# -----------------------
# Config defaults
# -----------------------
OUT_DIR="${OUT_DIR:-$HOME/Music/qobuz-dl}"
QUALITY="${QUALITY:-6}"
DRY_RUN="${DRY_RUN:-0}"
TRACKLIST_FILE=""

usage() {
  cat <<EOF
Usage:
  $(basename "$0") <spotify_url> [options]

Options:
  --dir DIR            Output directory for downloads (default: $OUT_DIR)
  --quality Q          5=320, 6=LOSSLESS, 7=24b<=96k, 27=>96k (default: $QUALITY)
  --dry                Dry-run: print qobuz commands; no downloads
  --tracklist FILE     Use an existing "Song - Artist" list; skip Spotify scraping
  -h, --help           Show this help

Env overrides:
  RUN_LUCKY_JS=/path/to/runLuckyForTracklist.js
  SPOTIFY_LIST_JS=/path/to/spotify_list.js
EOF
}

# -----------------------
# Parse args
# -----------------------
if [[ $# -lt 1 ]]; then usage; exit 1; fi
SPOTIFY_URL=""
while [[ $# -gt 0 ]]; do
  case "$1" in
    -h|--help) usage; exit 0 ;;
    --dir) OUT_DIR="$2"; shift 2 ;;
    --quality) QUALITY="$2"; shift 2 ;;
    --dry) DRY_RUN=1; shift ;;
    --tracklist) TRACKLIST_FILE="$2"; shift 2 ;;
    http*spotify.com*) SPOTIFY_URL="$1"; shift ;;
    *) echo "Unknown arg: $1"; usage; exit 1 ;;
  esac
done

if [[ -z "$SPOTIFY_URL" && -z "$TRACKLIST_FILE" ]]; then
  echo "Provide a Spotify URL or --tracklist <file>."
  exit 1
fi

# -----------------------
# Checks
# -----------------------
need() { command -v "$1" >/dev/null 2>&1 || { echo "Missing: $1"; exit 1; }; }
need node
need qobuz-dl
[[ -f "$RUN_LUCKY_JS" ]] || { echo "runLucky script not found at: $RUN_LUCKY_JS"; exit 1; }
if [[ -z "$TRACKLIST_FILE" ]]; then
  [[ -f "$SPOTIFY_LIST_JS" ]] || { echo "spotify_list.js not found at: $SPOTIFY_LIST_JS"; exit 1; }
fi

mkdir -p "$OUT_DIR"

# -----------------------
# Temp workspace
# -----------------------
TMP_ROOT="$(mktemp -d -t s2r.XXXXXX)"
trap 'rm -rf "$TMP_ROOT"' EXIT

TRACKS_TXT="$TRACKLIST_FILE"
if [[ -z "$TRACKLIST_FILE" ]]; then
  TRACKS_TXT="$TMP_ROOT/tracklist.txt"
  echo "Scraping Spotify → tracklist..."
  "$SPOTIFY_LIST_JS" "$SPOTIFY_URL" > "$TRACKS_TXT"
fi

LINES=$(grep -c ' - ' "$TRACKS_TXT" || true)
if [[ "${LINES:-0}" -eq 0 ]]; then
  echo "No valid 'Song - Artist' lines found in $TRACKS_TXT"
  exit 1
fi
echo "Found $LINES tracks."

# -----------------------
# Step 2: run qobuz-dl lucky via local JS
# -----------------------
echo "Starting qobuz downloads…"
if [[ "$DRY_RUN" -eq 1 ]]; then
  "$RUN_LUCKY_JS" "$TRACKS_TXT" --dir "$OUT_DIR" --quality "$QUALITY" --dry
else
  "$RUN_LUCKY_JS" "$TRACKS_TXT" --dir "$OUT_DIR" --quality "$QUALITY"
fi

echo "Done."
